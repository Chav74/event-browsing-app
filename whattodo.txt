Event Browsing App — Frontend Branch Setup Guide (Vite + React + Tailwind)

Goal: Work only on the `frontend` branch. Do not touch `main`.

Clone the fork (same on Mac & Windows)
1) Choose a folder to work in (e.g., Desktop).
2) Clone your fork and enter the repo:
   ```bash
   git clone https://github.com/an5onc/event-browsing-app.git
   cd event-browsing-app
   ```
3) Fetch all remote branches and confirm `origin/frontend` exists:
   ```bash
   git fetch --all --prune
   git branch -r   # look for origin/frontend
   ```

Create/Switch to the `frontend` branch
- If `origin/frontend` exists:
  ```bash
  git switch -c frontend --track origin/frontend
  ```
- If it does NOT exist yet but you want to base it on `main`:
  ```bash
  git switch -c frontend origin/main
  git push -u origin frontend
  ```

Verify you are on `frontend` (before any work)
```bash
git rev-parse --abbrev-ref HEAD   # should print: frontend
git status -sb                    # should show: ## frontend...origin/frontend
```
If it shows `main`, switch:
```bash
git switch frontend
```

Install dependencies (choose ONE tool)
- npm (Node LTS):
  ```bash
  npm ci || npm install
  ```
- pnpm:
  ```bash
  pnpm install
  ```
- yarn:
  ```bash
  yarn install
  ```
- bun:
  ```bash
  bun install
  ```

Run the dev server (Vite) — Mac & Windows
- npm:
  ```bash
  npm run dev
  ```
- pnpm:
  ```bash
  pnpm dev
  ```
- yarn:
  ```bash
  yarn dev
  ```
- bun:
  ```bash
  bun run dev
  ```
Open the printed local URL 
(commonly http://localhost:3000/). Leave this terminal running while developing.
    ```

Daily workflow (only on `frontend`)
1) Make sure you are on `frontend`:
   ```bash
   git rev-parse --abbrev-ref HEAD
   ```
2) Pull the latest `frontend` with rebase:
   ```bash
   git pull --rebase origin frontend
   ```
3) Do your work. Add/commit only on `frontend`:
   ```bash
   git add .
   git commit -m "<describe your change>"
   ```
4) Push to your fork’s `frontend`:
   ```bash
   git push origin frontend
   ```

Keeping `main` untouched
- Never commit on `main` locally. If you land on `main`, immediately switch back:
  ```bash
  git switch frontend
  ```
- Optional: make `frontend` your default working branch in GitHub repo settings and protect `main`.

Useful checks and fixes
- Show current branch and its upstream:
  ```bash
  git status -sb
  git branch -vv
  ```
- If dependencies get corrupted:
  ```bash
  rm -rf node_modules package-lock.json pnpm-lock.yaml yarn.lock bun.lockb  # Mac/Linux
  # Windows PowerShell:
  rmdir /s /q node_modules; del package-lock.json, pnpm-lock.yaml, yarn.lock, bun.lockb
  # reinstall using your chosen PM
  ```
- If you cloned earlier and only see `main`:
  ```bash
  git fetch --all --prune
  git branch -r
  git switch -c frontend --track origin/frontend
  ```

Summary
- Stack: Vite + React + Tailwind.
- Work ONLY on branch: `frontend`.
- Verify branch BEFORE add/commit/push.
- Install deps with your chosen PM. Run dev with that PM.